# Generated by Django 4.0.6 on 2022-07-12 15:09

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomGroup',
            fields=[
                ('group_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='auth.group')),
            ],
            options={
                'verbose_name': 'group',
            },
            bases=('auth.group',),
            managers=[
                ('objects', django.contrib.auth.models.GroupManager()),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True, verbose_name='Email address')),
                ('username', models.CharField(db_index=True, max_length=40, verbose_name='Username')),
                ('name', models.CharField(blank=True, max_length=30, null=True, verbose_name='Full name')),
                ('company_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='Company name')),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('currency', models.CharField(default='$', help_text="Could be e.g. '$' or 'USD'", max_length=3)),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Whether the user can login or not.', verbose_name='Active')),
                ('is_staff', models.BooleanField(db_index=True, default=False, help_text='Whether the user can login to this dashboard or not.', verbose_name='Staff status')),
                ('is_superuser', models.BooleanField(db_index=True, default=False, help_text='Grant all permissions regardless of everything, without asigning them one by one.', verbose_name='Superuser status')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'ordering': ('-date_joined',),
            },
        ),
    ]
